@page "/patients"
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@inject PatientsApiClient PatientsApi

<PageTitle>Пациенты</PageTitle>

<h1>Пациенты</h1>

<p>Этот компонент демонстрирует данные загружееные с помощью backend API сервиса.</p>

@if (patients == null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Фамилия</th>
                <th>Имя</th>
                <th>Дата рождения</th>
                <th>Пол</th>
                <th>Номер телефона</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var patient in patients)
            {
                <tr>
                    <td>@patient.id</td>
                    <td>@patient.Surname</td>
                    <td>@patient.Name</td>
                    <td>@patient.DateOfBirth</td>
                    <td>@patient.Gender</td>
                    <td>@patient.Phone</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Patient[]? patients;

    protected override async Task OnInitializedAsync()
    {
        patients = await PatientsApi.GetPatientsAsync();
    }
}
